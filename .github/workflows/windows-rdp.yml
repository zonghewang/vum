name: Windows RDP Server

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Random Number Generator
        id: random-number-generator
        run: |
          $timestemp=(([DateTime]::Now.ToUniversalTime().Ticks - 621355968000000000)/10000).tostring().Substring(0,13)
          echo "random-number=$timestemp" >> $GITHUB_OUTPUT
        shell: pwsh
        
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v4
        with:
          path: |
            D:/cache
          key: ${{ runner.os }}-primes-${{ steps.random-number-generator.outputs.random-number }}
          restore-keys: |
            ${{ runner.os }}-primes-
            ${{ runner.os }}-
          
      - name: Configure Core RDP Settings
        shell: pwsh
        run: .github/workflows/scripts/win-configure-rdp.ps1

      - name: Create RDP User with Secure Password
        env:
          LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
        shell: pwsh
        run: .github/workflows/scripts/win-create-user.ps1

      - name: Install Tailscale
        shell: pwsh
        run: .github/workflows/scripts/win-install-tailscale.ps1

      - name: Establish Tailscale Connection
        shell: pwsh
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: .github/workflows/scripts/win-establish-ts.ps1

      - name: Verify RDP Accessibility
        shell: pwsh
        run: .github/workflows/scripts/win-verify-rdp.ps1

      - name: Maintain Connection
        shell: pwsh
        run: |
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: vum"
          Write-Host "Password: $(echo $env:RDP_CREDS)"
          Write-Host "==================`n"      
          $global:file = Get-Content "${{ github.workspace }}\state.txt"
          while ($global:file -eq "true") {
            Write-Host "[$(Get-Date)] RDP Active"
            Start-Sleep -Seconds 10
            $global:file = Get-Content "${{ github.workspace }}\state.txt"
          }
